# The classname of a Hibernate Dialect - enables certain platform dependent features.
hibernate.dialect=net.sf.hibernate.dialect.MySQLDialect

# Set a maximum "depth" for the outer join fetch tree for single-ended associations (one-to-one, many-to-one). A 0 disables default outer join fetching.
# eg. recommended values between 0 and 3
# hibernate.max_fetch_depth=1

# Enable use of JDBC3 PreparedStatement.getGeneratedKeys() to retrieve natively generated keys after insert. Requires JDBC3+ driver and JRE1.4+, set to false if your driver has problems with the Hibernate identifier generators. By default, tries to determine the driver capabilites using connection metadata.
# eg. true|false 
hibernate.jdbc.use_get_generated_keys=true

# Write all SQL statements to console.
# eg. true | false 
# hibernate.show_sql=yes

# The classname of a custom CacheProvider.
# eg. classname.of.CacheProvider 
hibernate.cache.provider_class=net.sf.hibernate.cache.EhCacheProvider

# Optimize second-level cache operation to minimize writes, at the cost of more frequent reads (useful for clustered caches).
# eg. true|false
# hibernate.cache.use_minimal_puts=true

# Enable the query cache, individual queries still have to be set cachable.
# eg. classname.of.QueryCache
# hibernate.cache.use_query_cache=true

# Enables use of CGLIB instead of runtime reflection (System-level property). Reflection can sometimes be useful when troubleshooting, note that Hibernate always requires CGLIB even if you turn off the optimizer. You can not set this property in hibernate.cfg.xml.
# eg. true | false
# hibernate.cglib.use_reflection_optimizer=false

# Connection pooling
# hibernate.connection.driver_class=com.mysql.jdbc.Driver
# hibernate.connection.url=jdbc:mysql://sci3/rubis
# hibernate.connection.username=rubis
# hibernate.connection.password=rubis
# hibernate.connection.pool_size=64

# hibernate.c3p0.min_size=64
# hibernate.c3p0.max_size=1024
# hibernate.c3p0.timeout=1800
# hibernate.c3p0.max_statements=50
